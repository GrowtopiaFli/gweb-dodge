package;

import flixel.system.FlxAssets.FlxShader;

class Bloom extends FlxShader
{
	@:glFragmentSource('
		#pragma header

		vec4 sample_glow_pixel(sampler2D tex, vec2 uv) {
			float hdr_threshold = 1.0; // Pixels with higher color than 1 will glow
			return max(texture(tex, uv) - hdr_threshold, vec4(0.0));
		}

		void main() {
			vec2 ps = openfl_TextureSize;
			// Get blurred color from pixels considered glowing
			vec4 col0 = sample_glow_pixel(bitmap, openfl_TextureCoordv.st + vec2(-ps.x, 0));
			vec4 col1 = sample_glow_pixel(bitmap, openfl_TextureCoordv.st + vec2(ps.x, 0));
			vec4 col2 = sample_glow_pixel(bitmap, openfl_TextureCoordv.st + vec2(0, -ps.y));
			vec4 col3 = sample_glow_pixel(bitmap, openfl_TextureCoordv.st + vec2(0, ps.y));

			vec4 col = texture(bitmap, openfl_TextureCoordv.st);
			vec4 glowing_col = 0.25 * (col0 + col1 + col2 + col3);

			gl_FragColor = vec4(col.rgb + glowing_col.rgb, col.a);
		}')
	public function new()
	{
		super();
	}
}